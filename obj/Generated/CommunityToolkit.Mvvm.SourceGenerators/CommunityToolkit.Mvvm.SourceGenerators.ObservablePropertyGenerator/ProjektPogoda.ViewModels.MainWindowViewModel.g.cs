// <auto-generated/>
#pragma warning disable
#nullable enable
namespace ProjektPogoda.ViewModels
{
    /// <inheritdoc/>
    partial class MainWindowViewModel
    {
        /// <inheritdoc cref="miasto"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string Miasto
        {
            get => miasto;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("miasto")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(miasto, value))
                {
                    OnMiastoChanging(value);
                    OnMiastoChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Miasto);
                    miasto = value;
                    OnMiastoChanged(value);
                    OnMiastoChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Miasto);
                }
            }
        }

        /// <inheritdoc cref="pogoda"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::ProjektPogoda.Models.Pogoda Pogoda
        {
            get => pogoda;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("pogoda")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::ProjektPogoda.Models.Pogoda>.Default.Equals(pogoda, value))
                {
                    OnPogodaChanging(value);
                    OnPogodaChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Pogoda);
                    pogoda = value;
                    OnPogodaChanged(value);
                    OnPogodaChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Pogoda);
                }
            }
        }

        /// <inheritdoc cref="komunikatBledu"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string KomunikatBledu
        {
            get => komunikatBledu;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("komunikatBledu")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(komunikatBledu, value))
                {
                    OnKomunikatBleduChanging(value);
                    OnKomunikatBleduChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.KomunikatBledu);
                    komunikatBledu = value;
                    OnKomunikatBleduChanged(value);
                    OnKomunikatBleduChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.KomunikatBledu);
                }
            }
        }

        /// <inheritdoc cref="pokazPrzyciskWiecejInformacji"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool PokazPrzyciskWiecejInformacji
        {
            get => pokazPrzyciskWiecejInformacji;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(pokazPrzyciskWiecejInformacji, value))
                {
                    OnPokazPrzyciskWiecejInformacjiChanging(value);
                    OnPokazPrzyciskWiecejInformacjiChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.PokazPrzyciskWiecejInformacji);
                    pokazPrzyciskWiecejInformacji = value;
                    OnPokazPrzyciskWiecejInformacjiChanged(value);
                    OnPokazPrzyciskWiecejInformacjiChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.PokazPrzyciskWiecejInformacji);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="Miasto"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Miasto"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnMiastoChanging(string value);
        /// <summary>Executes the logic for when <see cref="Miasto"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Miasto"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnMiastoChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="Miasto"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Miasto"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnMiastoChanged(string value);
        /// <summary>Executes the logic for when <see cref="Miasto"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Miasto"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnMiastoChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="Pogoda"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Pogoda"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPogodaChanging(global::ProjektPogoda.Models.Pogoda value);
        /// <summary>Executes the logic for when <see cref="Pogoda"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Pogoda"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPogodaChanging(global::ProjektPogoda.Models.Pogoda? oldValue, global::ProjektPogoda.Models.Pogoda newValue);
        /// <summary>Executes the logic for when <see cref="Pogoda"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Pogoda"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPogodaChanged(global::ProjektPogoda.Models.Pogoda value);
        /// <summary>Executes the logic for when <see cref="Pogoda"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Pogoda"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPogodaChanged(global::ProjektPogoda.Models.Pogoda? oldValue, global::ProjektPogoda.Models.Pogoda newValue);
        /// <summary>Executes the logic for when <see cref="KomunikatBledu"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="KomunikatBledu"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnKomunikatBleduChanging(string value);
        /// <summary>Executes the logic for when <see cref="KomunikatBledu"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="KomunikatBledu"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnKomunikatBleduChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="KomunikatBledu"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="KomunikatBledu"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnKomunikatBleduChanged(string value);
        /// <summary>Executes the logic for when <see cref="KomunikatBledu"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="KomunikatBledu"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnKomunikatBleduChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="PokazPrzyciskWiecejInformacji"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PokazPrzyciskWiecejInformacji"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPokazPrzyciskWiecejInformacjiChanging(bool value);
        /// <summary>Executes the logic for when <see cref="PokazPrzyciskWiecejInformacji"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PokazPrzyciskWiecejInformacji"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPokazPrzyciskWiecejInformacjiChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="PokazPrzyciskWiecejInformacji"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PokazPrzyciskWiecejInformacji"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPokazPrzyciskWiecejInformacjiChanged(bool value);
        /// <summary>Executes the logic for when <see cref="PokazPrzyciskWiecejInformacji"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PokazPrzyciskWiecejInformacji"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnPokazPrzyciskWiecejInformacjiChanged(bool oldValue, bool newValue);
    }
}